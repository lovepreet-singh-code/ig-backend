version: '3.8'

services:
  # ======================
  # üîê User Service
  # ======================
  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - '5000:5000'
    env_file:
      - ./user-service/.env
    depends_on:
      - mongo
      - redis
      - kafka
    networks:
      - ig-net

  # ======================
  # üìù Post Service
  # ======================
  post-service:
    build:
      context: ./post-service
    container_name: post-service
    ports:
      - '5001:5001'
    env_file:
      - ./post-service/.env
    depends_on:
      - mongo
      - redis
      - kafka
    networks:
      - ig-net

  # ======================
  # üü¢ MongoDB
  # ======================
  mongo:
    image: mongo:6
    container_name: mongo
    restart: always
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - ig-net

  # ======================
  # üü† Redis
  # ======================
  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - '6379:6379'
    networks:
      - ig-net

  # ======================
  # üì¨ Kafka
  # ======================
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - ig-net

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ig-net

# ===========================
# üîó Shared Network & Volumes
# ===========================
networks:
  ig-net:
    driver: bridge

volumes:
  mongo-data:
